name: Docker Image CI

on:
  push:
    branches: ["main"]

jobs:
  build-x64:
    permissions: write-all # required to push image to ghcr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Run tests
        run: go test
      - name: Build binary
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-X main.BuildTimestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" -o easy-maintenance-app .
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Test /headers endpoint with container
        run: |
          docker build -t easy-maintenance-app .
          docker run --rm -d -p 8080:8080 --name easy-maintenance-app easy-maintenance-app
          sleep 5 # Wait for the container to be fully up
          response=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080/headers)
          echo "Response: $response"
          docker stop easy-maintenance-app
          if [ "$response" -ne 200 ]; then
            echo "Request to /headers failed with status code $response"
            exit 1
          fi        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}/easy-maintenance:latest-x64
          file: ./Dockerfile
          context: .
          platforms: linux/amd64
          provenance: false

  build-arm64:
    permissions: write-all # required to push image to ghcr
    runs-on: [ubuntu-24.04-arm]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Run tests
        run: go test
      - name: Build binary
        run: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-X main.BuildTimestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" -o easy-maintenance-app .
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Test /headers endpoint with container
        run: |
          docker build -t easy-maintenance-app .
          docker run --rm -d -p 8080:8080 --name easy-maintenance-app easy-maintenance-app
          sleep 5 # Wait for the container to be fully up
          response=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080/headers)
          echo "Response: $response"
          docker stop easy-maintenance-app
          if [ "$response" -ne 200 ]; then
            echo "Request to /headers failed with status code $response"
            exit 1
          fi
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}/easy-maintenance:latest-arm64
          file: ./Dockerfile
          context: .
          platforms: linux/arm64
          provenance: false

  build-arm:
    permissions: write-all # required to push image to ghcr
    runs-on: [ubuntu-24.04-arm]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Run tests
        run: go test
      - name: Build binary
        run: CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -ldflags="-X main.BuildTimestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" -o easy-maintenance-app .
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Test /headers endpoint with container
        run: |
          docker build -t easy-maintenance-app .
          docker run --rm -d -p 8080:8080 --name easy-maintenance-app easy-maintenance-app
          sleep 5 # Wait for the container to be fully up
          response=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080/headers)
          echo "Response: $response"
          docker stop easy-maintenance-app
          if [ "$response" -ne 200 ]; then
            echo "Request to /headers failed with status code $response"
            exit 1
          fi
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}/easy-maintenance:latest-arm
          file: ./Dockerfile
          context: .
          platforms: linux/arm
          provenance: false

  link-native-to-latest:
    permissions: write-all # required to push image to ghcr
    runs-on: ubuntu-latest
    needs: [build-x64, build-arm64, build-arm]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master # or use a pinned version in the Releases tab
        with:
          inputs: ghcr.io/${{ github.repository }}/easy-maintenance:latest
          images: ghcr.io/${{ github.repository }}/easy-maintenance:latest-arm,ghcr.io/${{ github.repository }}/easy-maintenance:latest-arm64,ghcr.io/${{ github.repository }}/easy-maintenance:latest-x64
          push: true
